;; THIS PROGRAMM DEMOSTRATES A TRAIN
;; WHICH GOES LEFT OR RIGHT.IN ORDER
;; TO STOP THE TRAIN WE MUST PRESS
;; ONE TIME THE INTRPT BUTTON
;; TO CHANGE THE DIRECTION WE PRESS
;; THE INTRPT BUTTON TWICE
;; FOR ALL THESE TO HAPPEN THE RIGHT
;; SWITCH MUST BE ON OTHERWISE THE
;; INTRPT WILL HAVE NO EFFECT ON
;; THE TRAINS ROUTE
LXI B,01F4H ;; OUR DELB DURATION
MVI D,FEH ;; TRAIN CURRENT POSITION
MVI E,00H ;; DIRECTION//0 UP-FFH DOWN
MVI H,00H ;; INTERRUPT STATE
MVI L,00H ;; FLAG// 1= WALL REACHED
MVI A,0DH ;; APPLY MASK
SIM
CHECK_LSB:
DI ;; DEACTIVATE INTRP
MVI C,FFH ;; THE INTRP BUTTON HAS
;; NO EFFECT ON OUR TRAIN//C
;; IS OUR FLAG
LDA 2000H ;; LED INPUT
ANI 01H ;; CHECK IF THE LSB IS ON
JZ CHECK_LSB
EI
WALL:
MOV A,L
CPI 00H
JNZ CHECK_LSB ;; THE TRAIN HAS REACHED TO
;; MSB OR LSB DESTINAION
;; WAITING FOR DOUBLE INTERRUPT
DIRECTION:
MVI C,F4H ;; WE START COUNTING THE EFFECT
;; OF THE INTERUPT
MOV A,E
CPI 00H
JNZ COUNT_DOWN;; WHICH DIRECTION
COUNT_UP:
MOV A,D
STA 3000H
DI
CALL DELB
EI
RLC ;; MOVE LEFT A STATION
MOV D,A
CPI 7FH ;; CHECK IF WE HIT MSB
JZ BORDER
JMP CHECK_LSB ;; IF NOT, REPEAT
COUNT_DOWN:
MOV A,D
STA 3000H
DI
CALL DELB
EI
RRC ;; MOVE RIGTH STATION
MOV D,A
CPI FEH ;; CHECK IF WE HIT LSB
JZ BORDER
JMP CHECK_LSB ;; IF NO, REPEAT
BORDER:
MVI L,01H ;; STOP THE MOVEMENT
MOV A,D
STA 3000H ;; DISPLAY THE STATION
;; BEFORE CHANGING
JMP CHECK_LSB ;; WAIT IN THE LOOP ON
;; TOP UNTIL DOUBLE INTERRUPT
INTR_ROUTINE:
PUSH PSW
MOV A,C
CPI FFH
JZ CHECK6.5 ;; THE INTERRUPT HAS NO EFFECT,
;; CHECK THE POSSIBLE INTR
;; FORM THE LSB
MOV A,H
CPI 00H
JNZ CHANGE ;; IF H=1 THIS INTERRUPT IS
;; THE SECOND AND WILL
;; CHANGE THE DIRECTION
MVI H,01H ;; IF H=0 ITS THE FIRST
;; INTERRUPT AND SHOULD
;; MAKE THE TRAIN STOP
MVI L,01H ;; STOP THE TRAIN
DONE:
POP PSW
EI
RET
CHECK6.5:
MVI B,00H ;; SMALLER DELB
RIM
ANI 20H
JNZ CHECK6.5 ;; REPEAT UNTIL THE
;; INTERRUPT IS SATISFIED
CALL DELB
MVI C,F4H
MVI B,01H ;; RESET THE DELB DURATION
JMP DONE
CHANGE:
MVI H,00H ;; RESET THE INTERRUPT COUNTER
MVI L,00H ;; START THE TRAIN
MOV A,E
CPI 00H
JZ CHANGE_DOWN ;; UP OR DOWN?
CHANGE_UP:
MOV A,D
RLC ;; WE HIT WALL SO
;; WE MUST MOVE LEFT
MOV D,A
JMP REV
CHANGE_DOWN:
MOV A,D
RRC ;; WE HIT WALL SO WE
;; MUST MOVE RIGHT
MOV D,A
REV:
MOV A,E
CMA
MOV E,A ;; CHANGE THE PREVIOYS
;; DIRECTION // E=00H || E=FFH
JMP DONE
END
