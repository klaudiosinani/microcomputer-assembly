PRINT MACRO CHAR
MOV DL,CHAR
MOV AH,2
INT 21H
ENDM
PRINT_STR MACRO STRING
MOV AX,DATA_SEG
MOV DS,AX
MOV DX,OFFSET STRING
MOV AH,9
INT 21H
ENDM
STACK_SEG SEGMENT STACK
DB 30 DUP(?)
STACK_SEG ENDS
DATA_SEG SEGMENT
START_MSG DB 0AH,0DH,"GIVE 3 HEX DIGITS: ",'$'
RES_MSG DB "DECIMAL= ",'$'
RETURN DB 0AH,0DH,'$'
DATA_SEG ENDS
CODE_SEG SEGMENT
ASSUME CS:CODE_SEG ,DS:DATA_SEG, SS:STACK_SEG
MAIN PROC FAR
START:
PRINT_STR START_MSG ;; PRINT INITIALIZATION MESSAGE
MOV CL,03H ;; COUNTER FOR 16 INPUT BYTES
READIN:
CMP CL,00H
JE RETER_N
MOV AH,08
INT 21H
JMP CONTT1
RETER_N:
MOV AH,08
INT 21H
CMP AL,0DH ;; IN [ENTER] PRESSED PRINT TO
;; SCREEN AND EXIT
JE PRINT_DEC
CMP AL,'U' ;; EXIT IN CASE OF 'U' PRESSED
JE EXITMN
JMP RETER_N
CONTT1:
CMP AL,'U'
JNE READ_NUM
JMP EXITMN
READ_NUM:
CMP AL,30H
JGE IS_NUM
JMP READIN
IS_NUM:
CMP AL,39H
JLE NUMBER
CMP AL,41H ;; ACCEPT FROM 'A'
JGE IS_UPPER
JMP READIN
IS_UPPER:
CMP AL,46H ;; UP UNTIL 'F'
JLE UPPER
JMP READIN
NUMBER:
PRINT AL
DEC CL
SUB AL,30H
MOV AH,00H
PUSH AX
JMP READIN
UPPER:
PRINT AL
DEC CL
SUB AL,41H
ADD AL,0AH ;; STORE HEX IN LNUM
MOV AH,00H
PUSH AX
JMP READIN
EXITMN:
MOV AX,4C00H
INT 21H
MAIN ENDP
PRINT_DEC:
;; THIS FUNCTION PRINTS THE HEX STORED INSIDE
;; LNUM BUFFER INTO DECIMAL FORM
MOV CX,0003H
MOV DX,0000H
PRINT RETURN
PRINT_STR RES_MSG
ADDR1:
MOV DX,0000H
POP AX
MOV BH,AL ;LSB
POP AX
MOV BL,AL ;
POP AX
ADD DL,AL
SHL DX,1
SHL DX,1
SHL DX,1
SHL DX,1
ADD DL,BL
SHL DX,1
SHL DX,1
SHL DX,1
SHL DX,1
ADD DL,BH
MOV CX,0000H
MOV AX,DX
ADDR2:
MOV DX,0000H
MOV BX,000AH
DIV BX
PUSH DX
INC CX
CMP AX,0000H
JNZ ADDR2
ADDR3:
POP DX
CMP CX,0004H
JE PRINT_YP
ADD DX,30H
PRINT DL
ADDR4:
LOOP ADDR3
JMP FINISH
PRINT_YP:
CMP DX,0000H
JE ADDR4
ADD DX,30H
PRINT DL
PRINT ','
JMP ADDR4
FINISH:
JMP START
CODE_SEG ENDS
END MAIN
